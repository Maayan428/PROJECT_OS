        -:    0:Source:PipelineStage.cpp
        -:    1:#include "PipelineStage.hpp"
        -:    2:
function _ZN13PipelineStageC2Ev called 8 returned 100% blocks executed 59%
        8:    3:PipelineStage::PipelineStage() : stop(false) {
call    0 returned 8
call    1 returned 8
call    2 returned 8
call    3 returned 8
call    4 returned 8
function _ZZN13PipelineStageC4EvENKUlvE_clEv called 8 returned 100% blocks executed 100%
       16:    4:    worker = std::thread([this]() { run(); });
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 8
call    4 returned 8
call    5 returned 8
        8:    5:}
call    0 never executed
call    1 never executed
call    2 never executed
        -:    6:
function _ZN13PipelineStageD2Ev called 8 returned 100% blocks executed 100%
        8:    7:PipelineStage::~PipelineStage() {
        -:    8:    {
        8:    9:        std::unique_lock<std::mutex> lock(mtx);
call    0 returned 8
        8:   10:        stop = true;
call    0 returned 8
        8:   11:        cv.notify_all();
call    0 returned 8
        8:   12:    }
call    0 returned 8
        8:   13:    if (worker.joinable()) {
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0
        8:   14:        worker.join();
call    0 returned 8
        -:   15:    }
        8:   16:}
call    0 returned 8
call    1 returned 8
call    2 returned 8
        -:   17:
function _ZN13PipelineStage6submitESt8functionIFvvEE called 8 returned 100% blocks executed 78%
        8:   18:void PipelineStage::submit(Task task) {
        8:   19:    std::unique_lock<std::mutex> lock(mtx);
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
        8:   20:    tasks.push(std::move(task));
call    0 returned 8
call    1 returned 8
branch  2 taken 8 (fallthrough)
branch  3 taken 0 (throw)
        8:   21:    cv.notify_one();
call    0 returned 8
        8:   22:}
call    0 returned 8
call    1 never executed
        -:   23:
function _ZN13PipelineStage3runEv called 8 returned 100% blocks executed 86%
        8:   24:void PipelineStage::run() {
        -:   25:    while (true) {
       16:   26:        Task task;
call    0 returned 16
        -:   27:        {
       16:   28:            std::unique_lock<std::mutex> lock(mtx);
call    0 returned 16
branch  1 taken 16 (fallthrough)
branch  2 taken 0 (throw)
function _ZZN13PipelineStage3runEvENKUlvE_clEv called 24 returned 100% blocks executed 100%
       40:   29:            cv.wait(lock, [&]() { return stop || !tasks.empty(); });
call    0 returned 16
branch  1 taken 16 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 24
branch  4 taken 16 (fallthrough)
branch  5 taken 8
call    6 returned 16
branch  7 taken 8 (fallthrough)
branch  8 taken 8
       24:   30:            if (stop && tasks.empty()) return;
call    0 returned 16
branch  1 taken 8 (fallthrough)
branch  2 taken 8
call    3 returned 8
branch  4 taken 8 (fallthrough)
branch  5 taken 0
branch  6 taken 8 (fallthrough)
branch  7 taken 8
        8:   31:            task = std::move(tasks.front());
call    0 returned 8
call    1 returned 8
call    2 returned 8
        8:   32:            tasks.pop();
call    0 returned 8
       16:   33:        }
call    0 returned 16
branch  1 taken 8 (fallthrough)
branch  2 taken 8
call    3 never executed
        8:   34:        task();
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
       24:   35:    }
call    0 returned 16
branch  1 taken 8 (fallthrough)
branch  2 taken 8
call    3 never executed
        -:   36:}
